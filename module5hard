from logging import fatal


class User:
    def __init__(self, nickname, password, age):
        self.nickname = nickname
        self.password = hash(password)
        self.age = age


class Video:
    def __init__(self, title, duration, adult_mode=False):
        self.title = title
        self.duration = duration
        self.time_now = 0
        self.adult_mode = adult_mode

class UrTube:
    def init(self):
        self.users = []
        self.videos = []
        self.current_user = None

    def log_in(self, nickname, password):
        nickname = input('Введите логин: ')
        password = hash(input('Введите пароль: '))
        for user in self.users:
            if user.nickname == nickname and user.check_password(password):
                self.current_user = user
                print(f"Приветствую, {nickname}")
                continue
        print("Неверный никнейм или пароль")

    def register(self, nickname, password, age):
        nickname = input('Введите никнейм: ')
        password = hash(input('Введите пароль: '))
        age = int(input('Введите Ваш возраст: '))
        for user in self.users:
            if user.nickname == nickname:
                print(f"Пользователь {nickname} уже существует")
                continue
        new_user = User(nickname, password, age)
        self.users.append(new_user)
        self.current_user = new_user
        print(f"Пользователь {nickname} успешно зарегистрирован")

    def log_out(self, nickname):
        if nickname not in self.users:
            print("Пользователь не найден.")

        print(f"Пользователь {nickname} успешно вышел из системы.")

    def add(self, title, description, adult_mode):
        video = Video(title, description, adult_mode)
        self.videos.append(video)
        print(f"Видео {title} успешно добавлено.")

    def get_videos(self, find_title, title):
        find_title = str(input('Введите поисковое слово: '))
        for video in self.videos:
            if find_title.lower() in video.title.lower():
                return self.videos

    def watch_video(self, nickname, title):
        user = self.users.get(nickname)
        if not user:
            print("Войдите в аккаунт, чтобы смотреть видео")

        for video in self.videos:
            if video.title.lower() == title.lower():
                if video.adult_mode == True and user.age < 18:
                    print("Вам нет 18 лет, пожалуйста покиньте страницу")
                video.time_now += 1
                return video.time_now
            print(video.time_now)
        print("Конец видео")

if __name__ == "__main__":
    ur = UrTube()
    v1 = Video('Лучший язык программирования 2024 года', 200)
    v2 = Video('Для чего девушкам парень программист?', 10, adult_mode=True)

    # Добавление видео
    ur.add(v1, v2)

    # Проверка поиска
    print(ur.get_videos('лучший'))
    print(ur.get_videos('ПРОГ'))

    # Проверка на вход пользователя и возрастное ограничение
    ur.watch_video('Для чего девушкам парень программист?')
    ur.register('vasya_pupkin', 'lolkekcheburek', 13)
    ur.watch_video('Для чего девушкам парень программист?')
    ur.register('urban_pythonist', 'iScX4vIJClb9YQavjAgF', 25)
    ur.watch_video('Для чего девушкам парень программист?')

    # Проверка входа в другой аккаунт
    ur.register('vasya_pupkin', 'F8098FM8fjm9jmi', 55)
    print(ur.current_user)

    # Попытка воспроизведения несуществующего видео
    ur.watch_video('Лучший язык программирования 2024 года!')




